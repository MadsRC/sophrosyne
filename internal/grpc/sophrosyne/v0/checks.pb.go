// Sophrosyne
//   Copyright (C) 2024  Mads R. Havmand
//
// This program is free software: you can redistribute it and/or modify
//   it under the terms of the GNU Affero General Public License as published by
//   the Free Software Foundation, either version 3 of the License, or
//   (at your option) any later version.
//
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU Affero General Public License for more details.
//
//   You should have received a copy of the GNU Affero General Public License
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: sophrosyne/v0/checks.proto

package v0

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Check:
	//
	//	*GetCheckRequest_Id
	//	*GetCheckRequest_Name
	Check isGetCheckRequest_Check `protobuf_oneof:"check"`
}

func (x *GetCheckRequest) Reset() {
	*x = GetCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sophrosyne_v0_checks_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckRequest) ProtoMessage() {}

func (x *GetCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sophrosyne_v0_checks_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckRequest.ProtoReflect.Descriptor instead.
func (*GetCheckRequest) Descriptor() ([]byte, []int) {
	return file_sophrosyne_v0_checks_proto_rawDescGZIP(), []int{0}
}

func (m *GetCheckRequest) GetCheck() isGetCheckRequest_Check {
	if m != nil {
		return m.Check
	}
	return nil
}

func (x *GetCheckRequest) GetId() string {
	if x, ok := x.GetCheck().(*GetCheckRequest_Id); ok {
		return x.Id
	}
	return ""
}

func (x *GetCheckRequest) GetName() string {
	if x, ok := x.GetCheck().(*GetCheckRequest_Name); ok {
		return x.Name
	}
	return ""
}

type isGetCheckRequest_Check interface {
	isGetCheckRequest_Check()
}

type GetCheckRequest_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

type GetCheckRequest_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

func (*GetCheckRequest_Id) isGetCheckRequest_Check() {}

func (*GetCheckRequest_Name) isGetCheckRequest_Check() {}

type GetCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Profiles         []string               `protobuf:"bytes,2,rep,name=profiles,proto3" json:"profiles,omitempty"`
	UpstreamServices []string               `protobuf:"bytes,3,rep,name=upstream_services,json=upstreamServices,proto3" json:"upstream_services,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *GetCheckResponse) Reset() {
	*x = GetCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sophrosyne_v0_checks_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckResponse) ProtoMessage() {}

func (x *GetCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sophrosyne_v0_checks_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckResponse.ProtoReflect.Descriptor instead.
func (*GetCheckResponse) Descriptor() ([]byte, []int) {
	return file_sophrosyne_v0_checks_proto_rawDescGZIP(), []int{1}
}

func (x *GetCheckResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCheckResponse) GetProfiles() []string {
	if x != nil {
		return x.Profiles
	}
	return nil
}

func (x *GetCheckResponse) GetUpstreamServices() []string {
	if x != nil {
		return x.UpstreamServices
	}
	return nil
}

func (x *GetCheckResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetCheckResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetCheckResponse) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type GetChecksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor string `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *GetChecksRequest) Reset() {
	*x = GetChecksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sophrosyne_v0_checks_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChecksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChecksRequest) ProtoMessage() {}

func (x *GetChecksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sophrosyne_v0_checks_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChecksRequest.ProtoReflect.Descriptor instead.
func (*GetChecksRequest) Descriptor() ([]byte, []int) {
	return file_sophrosyne_v0_checks_proto_rawDescGZIP(), []int{2}
}

func (x *GetChecksRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

type GetChecksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checks []*GetCheckResponse `protobuf:"bytes,1,rep,name=checks,proto3" json:"checks,omitempty"`
	Cursor string              `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Total  int32               `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetChecksResponse) Reset() {
	*x = GetChecksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sophrosyne_v0_checks_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChecksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChecksResponse) ProtoMessage() {}

func (x *GetChecksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sophrosyne_v0_checks_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChecksResponse.ProtoReflect.Descriptor instead.
func (*GetChecksResponse) Descriptor() ([]byte, []int) {
	return file_sophrosyne_v0_checks_proto_rawDescGZIP(), []int{3}
}

func (x *GetChecksResponse) GetChecks() []*GetCheckResponse {
	if x != nil {
		return x.Checks
	}
	return nil
}

func (x *GetChecksResponse) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *GetChecksResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Profiles         []string `protobuf:"bytes,2,rep,name=profiles,proto3" json:"profiles,omitempty"`
	UpstreamServices []string `protobuf:"bytes,3,rep,name=upstream_services,json=upstreamServices,proto3" json:"upstream_services,omitempty"`
}

func (x *CreateCheckRequest) Reset() {
	*x = CreateCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sophrosyne_v0_checks_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCheckRequest) ProtoMessage() {}

func (x *CreateCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sophrosyne_v0_checks_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCheckRequest.ProtoReflect.Descriptor instead.
func (*CreateCheckRequest) Descriptor() ([]byte, []int) {
	return file_sophrosyne_v0_checks_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCheckRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCheckRequest) GetProfiles() []string {
	if x != nil {
		return x.Profiles
	}
	return nil
}

func (x *CreateCheckRequest) GetUpstreamServices() []string {
	if x != nil {
		return x.UpstreamServices
	}
	return nil
}

type CreateCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Profiles         []string               `protobuf:"bytes,2,rep,name=profiles,proto3" json:"profiles,omitempty"`
	UpstreamServices []string               `protobuf:"bytes,3,rep,name=upstream_services,json=upstreamServices,proto3" json:"upstream_services,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *CreateCheckResponse) Reset() {
	*x = CreateCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sophrosyne_v0_checks_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCheckResponse) ProtoMessage() {}

func (x *CreateCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sophrosyne_v0_checks_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCheckResponse.ProtoReflect.Descriptor instead.
func (*CreateCheckResponse) Descriptor() ([]byte, []int) {
	return file_sophrosyne_v0_checks_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCheckResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCheckResponse) GetProfiles() []string {
	if x != nil {
		return x.Profiles
	}
	return nil
}

func (x *CreateCheckResponse) GetUpstreamServices() []string {
	if x != nil {
		return x.UpstreamServices
	}
	return nil
}

func (x *CreateCheckResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CreateCheckResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type UpdateCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Profiles         []string `protobuf:"bytes,2,rep,name=profiles,proto3" json:"profiles,omitempty"`
	UpstreamServices []string `protobuf:"bytes,3,rep,name=upstream_services,json=upstreamServices,proto3" json:"upstream_services,omitempty"`
}

func (x *UpdateCheckRequest) Reset() {
	*x = UpdateCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sophrosyne_v0_checks_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckRequest) ProtoMessage() {}

func (x *UpdateCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sophrosyne_v0_checks_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckRequest.ProtoReflect.Descriptor instead.
func (*UpdateCheckRequest) Descriptor() ([]byte, []int) {
	return file_sophrosyne_v0_checks_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCheckRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCheckRequest) GetProfiles() []string {
	if x != nil {
		return x.Profiles
	}
	return nil
}

func (x *UpdateCheckRequest) GetUpstreamServices() []string {
	if x != nil {
		return x.UpstreamServices
	}
	return nil
}

type UpdateCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Profiles         []string               `protobuf:"bytes,2,rep,name=profiles,proto3" json:"profiles,omitempty"`
	UpstreamServices []string               `protobuf:"bytes,3,rep,name=upstream_services,json=upstreamServices,proto3" json:"upstream_services,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *UpdateCheckResponse) Reset() {
	*x = UpdateCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sophrosyne_v0_checks_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckResponse) ProtoMessage() {}

func (x *UpdateCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sophrosyne_v0_checks_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckResponse.ProtoReflect.Descriptor instead.
func (*UpdateCheckResponse) Descriptor() ([]byte, []int) {
	return file_sophrosyne_v0_checks_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateCheckResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCheckResponse) GetProfiles() []string {
	if x != nil {
		return x.Profiles
	}
	return nil
}

func (x *UpdateCheckResponse) GetUpstreamServices() []string {
	if x != nil {
		return x.UpstreamServices
	}
	return nil
}

func (x *UpdateCheckResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UpdateCheckResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UpdateCheckResponse) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type DeleteCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteCheckRequest) Reset() {
	*x = DeleteCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sophrosyne_v0_checks_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCheckRequest) ProtoMessage() {}

func (x *DeleteCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sophrosyne_v0_checks_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCheckRequest.ProtoReflect.Descriptor instead.
func (*DeleteCheckRequest) Descriptor() ([]byte, []int) {
	return file_sophrosyne_v0_checks_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteCheckRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_sophrosyne_v0_checks_proto protoreflect.FileDescriptor

var file_sophrosyne_v0_checks_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x6f, 0x70, 0x68, 0x72, 0x6f, 0x73, 0x79, 0x6e, 0x65, 0x2f, 0x76, 0x30, 0x2f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x6f,
	0x70, 0x68, 0x72, 0x6f, 0x73, 0x79, 0x6e, 0x65, 0x2e, 0x76, 0x30, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x22, 0xa0, 0x02,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x75,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x2a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x7a, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x6f, 0x70, 0x68, 0x72, 0x6f, 0x73, 0x79, 0x6e, 0x65, 0x2e, 0x76,
	0x30, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x71, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2b,
	0x0a, 0x11, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x75, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xe8, 0x01, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10,
	0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x71, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11,
	0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xa3, 0x02, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x12, 0x2b, 0x0a, 0x11, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x75, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x28, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xa1, 0x03, 0x0a, 0x0c, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x1e, 0x2e, 0x73, 0x6f, 0x70, 0x68, 0x72, 0x6f, 0x73,
	0x79, 0x6e, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x6f, 0x70, 0x68, 0x72, 0x6f, 0x73,
	0x79, 0x6e, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x6f, 0x70, 0x68, 0x72, 0x6f, 0x73, 0x79, 0x6e,
	0x65, 0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x6f, 0x70, 0x68, 0x72, 0x6f, 0x73, 0x79,
	0x6e, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x21, 0x2e, 0x73, 0x6f, 0x70, 0x68, 0x72, 0x6f, 0x73,
	0x79, 0x6e, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x6f, 0x70, 0x68,
	0x72, 0x6f, 0x73, 0x79, 0x6e, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x21, 0x2e, 0x73,
	0x6f, 0x70, 0x68, 0x72, 0x6f, 0x73, 0x79, 0x6e, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x73, 0x6f, 0x70, 0x68, 0x72, 0x6f, 0x73, 0x79, 0x6e, 0x65, 0x2e, 0x76, 0x30, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x21, 0x2e, 0x73, 0x6f, 0x70, 0x68, 0x72, 0x6f, 0x73, 0x79, 0x6e, 0x65, 0x2e,
	0x76, 0x30, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x3a, 0x5a,
	0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x64, 0x73,
	0x72, 0x63, 0x2f, 0x73, 0x6f, 0x70, 0x68, 0x72, 0x6f, 0x73, 0x79, 0x6e, 0x65, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x6f, 0x70, 0x68,
	0x72, 0x6f, 0x73, 0x79, 0x6e, 0x65, 0x2f, 0x76, 0x30, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_sophrosyne_v0_checks_proto_rawDescOnce sync.Once
	file_sophrosyne_v0_checks_proto_rawDescData = file_sophrosyne_v0_checks_proto_rawDesc
)

func file_sophrosyne_v0_checks_proto_rawDescGZIP() []byte {
	file_sophrosyne_v0_checks_proto_rawDescOnce.Do(func() {
		file_sophrosyne_v0_checks_proto_rawDescData = protoimpl.X.CompressGZIP(file_sophrosyne_v0_checks_proto_rawDescData)
	})
	return file_sophrosyne_v0_checks_proto_rawDescData
}

var file_sophrosyne_v0_checks_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_sophrosyne_v0_checks_proto_goTypes = []interface{}{
	(*GetCheckRequest)(nil),       // 0: sophrosyne.v0.GetCheckRequest
	(*GetCheckResponse)(nil),      // 1: sophrosyne.v0.GetCheckResponse
	(*GetChecksRequest)(nil),      // 2: sophrosyne.v0.GetChecksRequest
	(*GetChecksResponse)(nil),     // 3: sophrosyne.v0.GetChecksResponse
	(*CreateCheckRequest)(nil),    // 4: sophrosyne.v0.CreateCheckRequest
	(*CreateCheckResponse)(nil),   // 5: sophrosyne.v0.CreateCheckResponse
	(*UpdateCheckRequest)(nil),    // 6: sophrosyne.v0.UpdateCheckRequest
	(*UpdateCheckResponse)(nil),   // 7: sophrosyne.v0.UpdateCheckResponse
	(*DeleteCheckRequest)(nil),    // 8: sophrosyne.v0.DeleteCheckRequest
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 10: google.protobuf.Empty
}
var file_sophrosyne_v0_checks_proto_depIdxs = []int32{
	9,  // 0: sophrosyne.v0.GetCheckResponse.created_at:type_name -> google.protobuf.Timestamp
	9,  // 1: sophrosyne.v0.GetCheckResponse.updated_at:type_name -> google.protobuf.Timestamp
	9,  // 2: sophrosyne.v0.GetCheckResponse.deleted_at:type_name -> google.protobuf.Timestamp
	1,  // 3: sophrosyne.v0.GetChecksResponse.checks:type_name -> sophrosyne.v0.GetCheckResponse
	9,  // 4: sophrosyne.v0.CreateCheckResponse.created_at:type_name -> google.protobuf.Timestamp
	9,  // 5: sophrosyne.v0.CreateCheckResponse.updated_at:type_name -> google.protobuf.Timestamp
	9,  // 6: sophrosyne.v0.UpdateCheckResponse.created_at:type_name -> google.protobuf.Timestamp
	9,  // 7: sophrosyne.v0.UpdateCheckResponse.updated_at:type_name -> google.protobuf.Timestamp
	9,  // 8: sophrosyne.v0.UpdateCheckResponse.deleted_at:type_name -> google.protobuf.Timestamp
	0,  // 9: sophrosyne.v0.CheckService.GetCheck:input_type -> sophrosyne.v0.GetCheckRequest
	2,  // 10: sophrosyne.v0.CheckService.GetChecks:input_type -> sophrosyne.v0.GetChecksRequest
	4,  // 11: sophrosyne.v0.CheckService.CreateCheck:input_type -> sophrosyne.v0.CreateCheckRequest
	6,  // 12: sophrosyne.v0.CheckService.UpdateCheck:input_type -> sophrosyne.v0.UpdateCheckRequest
	8,  // 13: sophrosyne.v0.CheckService.DeleteCheck:input_type -> sophrosyne.v0.DeleteCheckRequest
	1,  // 14: sophrosyne.v0.CheckService.GetCheck:output_type -> sophrosyne.v0.GetCheckResponse
	3,  // 15: sophrosyne.v0.CheckService.GetChecks:output_type -> sophrosyne.v0.GetChecksResponse
	5,  // 16: sophrosyne.v0.CheckService.CreateCheck:output_type -> sophrosyne.v0.CreateCheckResponse
	7,  // 17: sophrosyne.v0.CheckService.UpdateCheck:output_type -> sophrosyne.v0.UpdateCheckResponse
	10, // 18: sophrosyne.v0.CheckService.DeleteCheck:output_type -> google.protobuf.Empty
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_sophrosyne_v0_checks_proto_init() }
func file_sophrosyne_v0_checks_proto_init() {
	if File_sophrosyne_v0_checks_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sophrosyne_v0_checks_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sophrosyne_v0_checks_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sophrosyne_v0_checks_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChecksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sophrosyne_v0_checks_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChecksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sophrosyne_v0_checks_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sophrosyne_v0_checks_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sophrosyne_v0_checks_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sophrosyne_v0_checks_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sophrosyne_v0_checks_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sophrosyne_v0_checks_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*GetCheckRequest_Id)(nil),
		(*GetCheckRequest_Name)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sophrosyne_v0_checks_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sophrosyne_v0_checks_proto_goTypes,
		DependencyIndexes: file_sophrosyne_v0_checks_proto_depIdxs,
		MessageInfos:      file_sophrosyne_v0_checks_proto_msgTypes,
	}.Build()
	File_sophrosyne_v0_checks_proto = out.File
	file_sophrosyne_v0_checks_proto_rawDesc = nil
	file_sophrosyne_v0_checks_proto_goTypes = nil
	file_sophrosyne_v0_checks_proto_depIdxs = nil
}
