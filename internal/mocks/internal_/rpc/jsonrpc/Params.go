// Code generated by mockery v2.43.0. DO NOT EDIT.

package jsonrpc

import mock "github.com/stretchr/testify/mock"

// MockParams is an autogenerated mock type for the Params type
type MockParams struct {
	mock.Mock
}

type MockParams_Expecter struct {
	mock *mock.Mock
}

func (_m *MockParams) EXPECT() *MockParams_Expecter {
	return &MockParams_Expecter{mock: &_m.Mock}
}

// isParams provides a mock function with given fields:
func (_m *MockParams) isParams() {
	_m.Called()
}

// MockParams_isParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isParams'
type MockParams_isParams_Call struct {
	*mock.Call
}

// isParams is a helper method to define mock.On call
func (_e *MockParams_Expecter) isParams() *MockParams_isParams_Call {
	return &MockParams_isParams_Call{Call: _e.mock.On("isParams")}
}

func (_c *MockParams_isParams_Call) Run(run func()) *MockParams_isParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockParams_isParams_Call) Return() *MockParams_isParams_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockParams_isParams_Call) RunAndReturn(run func()) *MockParams_isParams_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockParams creates a new instance of MockParams. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockParams(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockParams {
	mock := &MockParams{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
