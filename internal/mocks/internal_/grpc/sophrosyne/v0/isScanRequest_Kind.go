// Code generated by mockery v2.43.2. DO NOT EDIT.

package v0

import mock "github.com/stretchr/testify/mock"

// MockisScanRequest_Kind is an autogenerated mock type for the isScanRequest_Kind type
type MockisScanRequest_Kind struct {
	mock.Mock
}

type MockisScanRequest_Kind_Expecter struct {
	mock *mock.Mock
}

func (_m *MockisScanRequest_Kind) EXPECT() *MockisScanRequest_Kind_Expecter {
	return &MockisScanRequest_Kind_Expecter{mock: &_m.Mock}
}

// isScanRequest_Kind provides a mock function with given fields:
func (_m *MockisScanRequest_Kind) isScanRequest_Kind() {
	_m.Called()
}

// MockisScanRequest_Kind_isScanRequest_Kind_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isScanRequest_Kind'
type MockisScanRequest_Kind_isScanRequest_Kind_Call struct {
	*mock.Call
}

// isScanRequest_Kind is a helper method to define mock.On call
func (_e *MockisScanRequest_Kind_Expecter) isScanRequest_Kind() *MockisScanRequest_Kind_isScanRequest_Kind_Call {
	return &MockisScanRequest_Kind_isScanRequest_Kind_Call{Call: _e.mock.On("isScanRequest_Kind")}
}

func (_c *MockisScanRequest_Kind_isScanRequest_Kind_Call) Run(run func()) *MockisScanRequest_Kind_isScanRequest_Kind_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockisScanRequest_Kind_isScanRequest_Kind_Call) Return() *MockisScanRequest_Kind_isScanRequest_Kind_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockisScanRequest_Kind_isScanRequest_Kind_Call) RunAndReturn(run func()) *MockisScanRequest_Kind_isScanRequest_Kind_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockisScanRequest_Kind creates a new instance of MockisScanRequest_Kind. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockisScanRequest_Kind(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockisScanRequest_Kind {
	mock := &MockisScanRequest_Kind{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
