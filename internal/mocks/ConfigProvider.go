// Code generated by mockery v2.39.1. DO NOT EDIT.

package sophrosyne

import mock "github.com/stretchr/testify/mock"

// ConfigProvider is an autogenerated mock type for the ConfigProvider type
type ConfigProvider struct {
	mock.Mock
}

type ConfigProvider_Expecter struct {
	mock *mock.Mock
}

func (_m *ConfigProvider) EXPECT() *ConfigProvider_Expecter {
	return &ConfigProvider_Expecter{mock: &_m.Mock}
}

// Get provides a mock function with given fields:
func (_m *ConfigProvider) Get() *Config {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 *Config
	if rf, ok := ret.Get(0).(func() *Config); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Config)
		}
	}

	return r0
}

// ConfigProvider_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type ConfigProvider_Get_Call struct {
	*mock.Call
}

// Get is a helper method to define mock.On call
func (_e *ConfigProvider_Expecter) Get() *ConfigProvider_Get_Call {
	return &ConfigProvider_Get_Call{Call: _e.mock.On("Get")}
}

func (_c *ConfigProvider_Get_Call) Run(run func()) *ConfigProvider_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ConfigProvider_Get_Call) Return(_a0 *Config) *ConfigProvider_Get_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ConfigProvider_Get_Call) RunAndReturn(run func() *Config) *ConfigProvider_Get_Call {
	_c.Call.Return(run)
	return _c
}

// NewConfigProvider creates a new instance of ConfigProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConfigProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *ConfigProvider {
	mock := &ConfigProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
