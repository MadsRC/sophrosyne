<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a9152082-80d9-4d6c-886a-c2713d5de713" name="Changes" comment="added basic healthcheck">
      <change afterPath="$PROJECT_DIR$/.mise/tasks/dev/format" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.github/workflows/sonarcloud.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/.github/workflows/sonarcloud.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.golangci.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/.golangci.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sonarlint/issuestore/0/6/0607f785dfa3c3861b3239f6723eb276d8056461" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sonarlint/issuestore/0/6/0607f785dfa3c3861b3239f6723eb276d8056461" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sonarlint/issuestore/0/e/0e2a1047ac2623da220e846e51290b8a5e98ef33" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sonarlint/issuestore/0/e/0e2a1047ac2623da220e846e51290b8a5e98ef33" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sonarlint/issuestore/5/a/5add1b8edace9ddb13c89b95cd8a5d238411cf9b" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sonarlint/issuestore/5/a/5add1b8edace9ddb13c89b95cd8a5d238411cf9b" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sonarlint/issuestore/b/4/b4fcccd110c768368c7c09e83d4dee0d9b3c16fe" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sonarlint/issuestore/b/4/b4fcccd110c768368c7c09e83d4dee0d9b3c16fe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sonarlint/issuestore/d/9/d9e5f9cdef2248a814493a8c331fa5f33ba857e8" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sonarlint/issuestore/d/9/d9e5f9cdef2248a814493a8c331fa5f33ba857e8" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sonarlint/issuestore/f/5/f59491f7105d5a37b8769a1fe58d170b7574260f" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sonarlint/issuestore/f/5/f59491f7105d5a37b8769a1fe58d170b7574260f" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sonarlint/issuestore/index.pb" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sonarlint/issuestore/index.pb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sonarlint/securityhotspotstore/index.pb" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sonarlint/securityhotspotstore/index.pb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.mise.toml" beforeDir="false" afterPath="$PROJECT_DIR$/.mise.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.mise/tasks/dev/lint" beforeDir="false" afterPath="$PROJECT_DIR$/.mise/tasks/dev/lint" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/sophrosyne/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/sophrosyne/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/grpc/checks/checks.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/grpc/checks/checks.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/grpc/checks/checks_grpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/grpc/checks/checks_grpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/http/http.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/http/http.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/http/middleware/middleware.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/http/middleware/middleware.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/.local/share/mise/installs/go/1.22.2" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2fv9CUc3Q3puSq5b47e5Cm6nnn6" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Docker.Dockerfile.executor": "Run",
    "Go Test.TestSomething in github.com/madsrc/sophrosyne.executor": "Run",
    "Go Test.TestStartup in github.com/madsrc/sophrosyne/tests/integration.executor": "Run",
    "Go Test.TestStartup/API_not_served_via_plaintext in github.com/madsrc/sophrosyne/tests/integration.executor": "Run",
    "Go Test.TestStartup/API_served_via_TLS#01 in github.com/madsrc/sophrosyne/tests/integration.executor": "Run",
    "Go Test.TestWithRedis in github.com/madsrc/sophrosyne/tests/integration.executor": "Run",
    "Makefile Target.dist/sophrosyne.executor": "Run",
    "Makefile Target.dist/sophrosyne.tar.executor": "Run",
    "Makefile Target.test/integration.executor": "Run",
    "Makefile Target.test/integration/%.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "goRewrite",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/user/projects/sophrosyne/.mise/tasks/dev",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "go.autoimport"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/.mise/tasks/dev" />
      <recent name="$PROJECT_DIR$/.mise/tasks/build" />
      <recent name="$PROJECT_DIR$/internal/migrate/migrations" />
      <recent name="$PROJECT_DIR$/internal/pgx" />
      <recent name="$PROJECT_DIR$/internal/rpc/services" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/tests/integration" />
      <recent name="$PROJECT_DIR$/cmd/sophrosyne" />
      <recent name="$PROJECT_DIR$/.mise/tasks/build" />
      <recent name="$PROJECT_DIR$/docs" />
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestStartup in github.com/madsrc/sophrosyne/tests/integration">
    <configuration name="TestSomething in github.com/madsrc/sophrosyne" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sophrosyne" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/madsrc/sophrosyne" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSomething\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestStartup in github.com/madsrc/sophrosyne/tests/integration" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sophrosyne" />
      <working_directory value="$PROJECT_DIR$/tests/integration" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/madsrc/sophrosyne/tests/integration" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestStartup\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestStartup/API_not_served_via_plaintext in github.com/madsrc/sophrosyne/tests/integration" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sophrosyne" />
      <working_directory value="$PROJECT_DIR$/tests/integration" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/madsrc/sophrosyne/tests/integration" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestStartup\E$/^\QAPI_not_served_via_plaintext\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestStartup/API_served_via_TLS#01 in github.com/madsrc/sophrosyne/tests/integration" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sophrosyne" />
      <working_directory value="$PROJECT_DIR$/tests/integration" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/madsrc/sophrosyne/tests/integration" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestStartup\E$/^\QAPI_served_via_TLS#01\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestWithRedis in github.com/madsrc/sophrosyne/tests/integration" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sophrosyne" />
      <working_directory value="$PROJECT_DIR$/tests/integration" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/madsrc/sophrosyne/tests/integration" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestWithRedis\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestStartup in github.com/madsrc/sophrosyne/tests/integration" />
        <item itemvalue="Go Test.TestStartup/API_served_via_TLS#01 in github.com/madsrc/sophrosyne/tests/integration" />
        <item itemvalue="Go Test.TestStartup/API_not_served_via_plaintext in github.com/madsrc/sophrosyne/tests/integration" />
        <item itemvalue="Go Test.TestSomething in github.com/madsrc/sophrosyne" />
        <item itemvalue="Go Test.TestWithRedis in github.com/madsrc/sophrosyne/tests/integration" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-e0158606a674-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.15989.157" />
        <option value="bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-GO-241.15989.157" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="initial work on golang implementation" />
    <MESSAGE value="added basic healthcheck" />
    <option name="LAST_COMMIT_MESSAGE" value="added basic healthcheck" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>
