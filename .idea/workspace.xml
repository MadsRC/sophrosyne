<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a9152082-80d9-4d6c-886a-c2713d5de713" name="Changes" comment="added basic healthcheck">
      <change beforePath="$PROJECT_DIR$/.idea/sonarlint/issuestore/index.pb" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sonarlint/issuestore/index.pb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sonarlint/securityhotspotstore/index.pb" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sonarlint/securityhotspotstore/index.pb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.pre-commit-config.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/.pre-commit-config.yaml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/.local/share/mise/installs/go/1.22.2" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2fv9CUc3Q3puSq5b47e5Cm6nnn6" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Docker.Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestSomething in github.com/madsrc/sophrosyne.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestStartup in github.com/madsrc/sophrosyne/tests/integration.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestStartup/API_not_served_via_plaintext in github.com/madsrc/sophrosyne/tests/integration.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestStartup/API_served_via_TLS#01 in github.com/madsrc/sophrosyne/tests/integration.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestWithRedis in github.com/madsrc/sophrosyne/tests/integration.executor&quot;: &quot;Run&quot;,
    &quot;Makefile Target.dist/sophrosyne.executor&quot;: &quot;Run&quot;,
    &quot;Makefile Target.dist/sophrosyne.tar.executor&quot;: &quot;Run&quot;,
    &quot;Makefile Target.test/integration.executor&quot;: &quot;Run&quot;,
    &quot;Makefile Target.test/integration/%.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;goRewrite&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/user/projects/sophrosyne/.mise/tasks/dev&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;go.autoimport&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/.mise/tasks/dev" />
      <recent name="$PROJECT_DIR$/.mise/tasks/build" />
      <recent name="$PROJECT_DIR$/internal/migrate/migrations" />
      <recent name="$PROJECT_DIR$/internal/pgx" />
      <recent name="$PROJECT_DIR$/internal/rpc/services" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/tests/integration" />
      <recent name="$PROJECT_DIR$/cmd/sophrosyne" />
      <recent name="$PROJECT_DIR$/.mise/tasks/build" />
      <recent name="$PROJECT_DIR$/docs" />
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestStartup in github.com/madsrc/sophrosyne/tests/integration">
    <configuration name="TestSomething in github.com/madsrc/sophrosyne" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sophrosyne" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/madsrc/sophrosyne" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSomething\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestStartup in github.com/madsrc/sophrosyne/tests/integration" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sophrosyne" />
      <working_directory value="$PROJECT_DIR$/tests/integration" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/madsrc/sophrosyne/tests/integration" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestStartup\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestStartup/API_not_served_via_plaintext in github.com/madsrc/sophrosyne/tests/integration" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sophrosyne" />
      <working_directory value="$PROJECT_DIR$/tests/integration" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/madsrc/sophrosyne/tests/integration" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestStartup\E$/^\QAPI_not_served_via_plaintext\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestStartup/API_served_via_TLS#01 in github.com/madsrc/sophrosyne/tests/integration" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sophrosyne" />
      <working_directory value="$PROJECT_DIR$/tests/integration" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/madsrc/sophrosyne/tests/integration" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestStartup\E$/^\QAPI_served_via_TLS#01\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestWithRedis in github.com/madsrc/sophrosyne/tests/integration" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sophrosyne" />
      <working_directory value="$PROJECT_DIR$/tests/integration" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/madsrc/sophrosyne/tests/integration" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestWithRedis\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestStartup in github.com/madsrc/sophrosyne/tests/integration" />
        <item itemvalue="Go Test.TestStartup/API_served_via_TLS#01 in github.com/madsrc/sophrosyne/tests/integration" />
        <item itemvalue="Go Test.TestStartup/API_not_served_via_plaintext in github.com/madsrc/sophrosyne/tests/integration" />
        <item itemvalue="Go Test.TestSomething in github.com/madsrc/sophrosyne" />
        <item itemvalue="Go Test.TestWithRedis in github.com/madsrc/sophrosyne/tests/integration" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-e0158606a674-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.15989.157" />
        <option value="bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-GO-241.15989.157" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="initial work on golang implementation" />
    <MESSAGE value="added basic healthcheck" />
    <option name="LAST_COMMIT_MESSAGE" value="added basic healthcheck" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>
