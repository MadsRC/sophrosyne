<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a9152082-80d9-4d6c-886a-c2713d5de713" name="Changes" comment="added basic healthcheck">
      <change afterPath="$PROJECT_DIR$/.mise.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.mise/tasks/dev/db/down" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.mise/tasks/dev/db/up" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.mise/tasks/dev/run" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.mise/tasks/sync-go-version" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/checks.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/dummycheck/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/grpc/checks/checks.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/grpc/checks/checks_grpc.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/migrate/migrations/000003_checks_and_profiles.down.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/migrate/migrations/000003_checks_and_profiles.up.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/migrate/migrations/000004_add_default_profile_to_users.down.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/migrate/migrations/000004_add_default_profile_to_users.up.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/pgx/checks.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/pgx/profiles.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/rpc/services/checkservice.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/rpc/services/profileservice.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/rpc/services/scanservice.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/rpc/services/services.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/profiles.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/proto/checks/checks.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scans.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/integration/startup_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Makefile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/bruno.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/sophrosyne/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/sophrosyne/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/collection.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/configurations/integration.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.development.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/environments/integration.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/environments/local.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/cedar/cedar.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/cedar/cedar.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/http/middleware/middleware.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/http/middleware/middleware.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/pgx/pgx.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/pgx/pgx.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/rpc/services/userservice.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/rpc/services/userservice.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/tls/tls.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/tls/tls.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth01/bruno.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth01/collection.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth01/config.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth01/docker-compose.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth01/environments/integration.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth01/tests/authenticated-healthcheck.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth01/tests/bad-authentication-healthcheck.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth01/tests/unauthenticated-healthcheck.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/bruno.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/collection.bru" beforeDir="false" afterPath="$PROJECT_DIR$/.mise/tasks/clean" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/config.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/docker-compose.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/environments/integration.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/checks/create-check.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/checks/delete-check.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/checks/list-check.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/checks/list-checks.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/checks/update-check.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/profiles/create-profile.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/profiles/delete-profile.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/profiles/list-profile.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/profiles/list-profiles.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/profiles/update-profile.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/safety/scan.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/users/create-user.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/users/delete-user.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/users/list-user.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/users/list-users.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/users/rotate-token.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/auth_required/tests/users/update-users.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/bruno.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/collection.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/config.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/docker-compose.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/environments/integration.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/inactiveUser01/create-user.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/inactiveUser01/delete-user.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/inactiveUser01/list-users.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/inactiveUser01/update-user.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/scanProcedure01/create-check.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/scanProcedure01/create-profile.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/scanProcedure01/delete-check.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/scanProcedure01/delete-profile.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/scanProcedure01/list-check local:dummy:scanProcedure01.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/scanProcedure01/reset default profile for root.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/scanProcedure01/scan.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/scanProcedure01/set default profile for root.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/users/create-user.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/users/delete-user.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/users/list-user as user.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/users/list-user.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/users/list-users.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/users/rotate-token as root.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/users/rotate-token own token.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/integration/healthy_instance/tests/users/update-user.bru" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/users.go" beforeDir="false" afterPath="$PROJECT_DIR$/users.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/.local/share/mise/installs/go/1.22.2" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2fv9CUc3Q3puSq5b47e5Cm6nnn6" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Docker.Dockerfile.executor": "Run",
    "Go Test.TestSomething in github.com/madsrc/sophrosyne.executor": "Run",
    "Go Test.TestWithRedis in github.com/madsrc/sophrosyne/tests/integration.executor": "Run",
    "Makefile Target.dist/sophrosyne.executor": "Run",
    "Makefile Target.dist/sophrosyne.tar.executor": "Run",
    "Makefile Target.test/integration.executor": "Run",
    "Makefile Target.test/integration/%.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "goRewrite",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/user/projects/sophrosyne/.mise/tasks/build",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.pluginManager"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/.mise/tasks/build" />
      <recent name="$PROJECT_DIR$/internal/migrate/migrations" />
      <recent name="$PROJECT_DIR$/internal/pgx" />
      <recent name="$PROJECT_DIR$/internal/rpc/services" />
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/tests/integration" />
      <recent name="$PROJECT_DIR$/cmd/sophrosyne" />
      <recent name="$PROJECT_DIR$/.mise/tasks/build" />
      <recent name="$PROJECT_DIR$/docs" />
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestSomething in github.com/madsrc/sophrosyne">
    <configuration name="TestSomething in github.com/madsrc/sophrosyne" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sophrosyne" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/madsrc/sophrosyne" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSomething\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestWithRedis in github.com/madsrc/sophrosyne/tests/integration" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sophrosyne" />
      <working_directory value="$PROJECT_DIR$/tests/integration" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/madsrc/sophrosyne/tests/integration" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestWithRedis\E$" />
      <method v="2" />
    </configuration>
    <configuration name="dist/sophrosyne.tar" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="dist/sophrosyne.tar" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration name="test/integration" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="test/integration" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration name="test/integration/%" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="test/integration/%" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestSomething in github.com/madsrc/sophrosyne" />
        <item itemvalue="Go Test.TestWithRedis in github.com/madsrc/sophrosyne/tests/integration" />
        <item itemvalue="Makefile Target.test/integration" />
        <item itemvalue="Makefile Target.test/integration/%" />
        <item itemvalue="Makefile Target.dist/sophrosyne.tar" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-e0158606a674-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.15989.157" />
        <option value="bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-GO-241.15989.157" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="initial work on golang implementation" />
    <MESSAGE value="added basic healthcheck" />
    <option name="LAST_COMMIT_MESSAGE" value="added basic healthcheck" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>
